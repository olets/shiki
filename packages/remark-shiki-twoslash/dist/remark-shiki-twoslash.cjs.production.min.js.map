{"version":3,"file":"remark-shiki-twoslash.cjs.production.min.js","sources":["../src/exceptionMessageDOM.ts","../src/index.ts","../src/includes.ts","../src/caching.ts"],"sourcesContent":["import type { RemarkCodeNode } from \"./index\"\n\nimport {TwoslashError} from \"@typescript/twoslash\"\n\nfunction escapeHtml(html: string) {\n  return html.replace(/</g, \"&lt;\").replace(/>/g, \"&gt;\")\n}\n\nexport const setupNodeForTwoslashException = (code: string, node: RemarkCodeNode, error: unknown) => {\n    const css = `<style>\n@import url('http://fonts.cdnfonts.com/css/caslon-os'); \n\n.twoslash-fixed-error-note { \n    position: fixed;\n    top: 20px;\n    right: 20px;\n    display: flex;\n    align-items: center;\n    padding: .25rem .75rem;\n    color: black;\n    background-color: #FCF3D9;\n    background-clip: padding-box;\n    border-bottom: 1px solid rgba(0,0,0,.05);\n    border-radius: .25rem;\n    font-family: -apple-system,BlinkMacSystemFont,\"Segoe UI\",Roboto,\"Helvetica Neue\",Arial,\"Noto Sans\",sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\",\"Segoe UI Symbol\",\"Noto Color Emoji\";\n } \n\n #__docusaurus .twoslash-fixed-error-note {\n    top: 80px;\n }\n\n .twoslash-fixed-error-note:hover {\n    border-bottom: 1px solid rgba(226, 61, 30, 0.8);\n }\n\n .twoslash-error-color {\n    background-color: #E23D1E;\n    width: 18px;\n    height: 18px;\n    border-radius: 9px;\n    margin-right:  10px;\n    color: black;\n }\n\n.twoslash-exception-message { \n    font-family: 'Caslon OS', sans-serif; \n    background-color: #FCF3D9;\n    font-size: 1.1rem;\n    padding: 2rem;\n    border-left: 2px solid #E23D1E;\n}\n\n.twoslash-exception-message p {\n    margin-top: 1rem;\n    margin-bottom: 0.6rem;\n}\n\n.twoslash-exception-message h3 { \n    margin-top: 0.6rem;\n    margin-bottom: 0.3rem;\n    font-size: 1.8rem;\n}\n\n.twoslash-exception-message code {\n     white-space: pre-wrap;\n     font-family: \"JetBrains Mono\", Menlo, Monaco, Consolas, Courier New, monospace;\n     margin-bottom: 20px;\n     background-color: #FCF3D9;\n     color: black;\n     border: none;\n     padding-left: 0;\n }\n\n .twoslash-exception-message > code {\n     display: block;\n     margin-bottom: 1.5rem;\n     margin-top: 3rem;\n }\n\n.twoslash-exception-code {\n    border-left: 2px solid #E5A604;\n    padding-left: 20px;\n    background-color: #FCF3D9;\n    color: black;\n}\n</style>`\n\n    const bodyFromTwoslashError = (error: TwoslashError) =>  {\n        return `\n<h3>${escapeHtml(error.title)}</h3>\n<p>${escapeHtml(error.description).replace(/(?:\\r\\n|\\r|\\n)/g, \"<br>\")}</p>\n<code>${escapeHtml(error.recommendation).replace(/(?:\\r\\n|\\r|\\n)/g, \"<br>\")}</code>\n`\n    }\n\n    const bodyFromError = (error: Error) => {\n        return `<pre><code>${error.message.split(\"## Code\")[0]}</code></pre>`\n    }\n\n    // @ts-ignore\n    const isWebWorker = typeof self !== \"undefined\" && typeof self.WorkerGlobalScope !== \"undefined\"\n    const isBrowser =\n      isWebWorker ||\n      (typeof window !== \"undefined\" && typeof window.document !== \"undefined\" && typeof fetch !== \"undefined\")\n  \n      const isJest = typeof jest !== \"undefined\"\n\n    const eLog = !isBrowser && !isJest ? console.error : (_str: string) => {}\n\n    let body = `<pre><code>${error}</code></pre>`\n    if (typeof error !== \"object\") {\n        body = String(error)\n        eLog(`### Unexpected error:`)\n        eLog(error)\n    } else if (error instanceof TwoslashError) {\n        body = bodyFromTwoslashError(error)\n        eLog(`### Twoslash error: ${error.title}`)\n        eLog(error.description)\n        eLog(error.recommendation)\n        eLog(\"\\n### Code Sample\")\n        eLog(code)\n    } else if (error instanceof Error) {\n        body = bodyFromError(error)\n        eLog(`### Unexpected error:`)\n        eLog(error)\n    }\n\n    const codeSample = `<p>Raising Code:</p><pre class='twoslash-exception-code'><code>${escapeHtml(code)}</code></pre>`\n\n    const html = `\n    <a href='#twoslash-error'><div class='twoslash-fixed-error-note'><span class='twoslash-error-color'></span>Twoslash failure</div></a>\n    <div class='twoslash-exception-message'>${body}${codeSample}</div>`\n\n\n    node.type = \"html\"\n    node.value =  \"<div id='twoslash-error'>\" + css + html + \"</div>\"\n    node.children = []\n}","import type { Node } from \"unist\";\nimport type { Transformer } from \"unified\";\nimport { TwoslashError, TwoSlashReturn } from \"@typescript/twoslash\";\n\nimport visit from \"unist-util-visit\";\nimport { lex, parse } from \"fenceparser\";\nimport { Lang, Highlighter, getHighlighter } from \"@olets/shiki\";\nimport { UserConfigSettings, renderCodeToHTML } from \"@olets/shiki-twoslash\";\n\nimport { cachedTwoslashCall } from \"./caching\";\nimport { addIncludes, replaceIncludesInCode } from \"./includes\";\nimport { setupNodeForTwoslashException } from \"./exceptionMessageDOM\";\n\ntype Fence = {\n  lang: string;\n  meta: NonNullable<ReturnType<typeof parse>>;\n};\n\n// A set of includes which can be pulled via a set ID\nconst includes = new Map<string, string>();\n\nfunction getHTML(\n  code: string,\n  fence: Fence,\n  highlighters: Highlighter[],\n  twoslash: TwoSlashReturn | undefined,\n  twoslashSettings: UserConfigSettings\n) {\n  // Shiki doesn't respect json5 as an input, so switch it\n  // to json, which can handle comments in the syntax highlight\n  const replacer: Record<string, string> = {\n    json5: \"json\",\n  };\n\n  if (replacer[fence.lang]) fence.lang = replacer[fence.lang];\n\n  let results;\n  // Support 'twoslash' includes\n  if (fence.lang === \"twoslash\") {\n    if (!fence.meta.include || typeof fence.meta.include !== \"string\") {\n      throw new Error(\n        \"A twoslash code block needs a pragma like 'twoslash include [name]'\"\n      );\n    }\n\n    addIncludes(includes, fence.meta.include as string, code);\n    results = twoslashSettings.wrapFragments\n      ? `<div class=\"shiki-twoslash-fragment\"></div>`\n      : \"\";\n  } else {\n    // All good, get each highlighter and render the shiki output for it\n    const output = highlighters.map((highlighter) => {\n      // @ts-ignore\n      const themeName: string = highlighter.customName\n        .split(\"/\")\n        .pop()\n        .replace(\".json\", \"\");\n      return renderCodeToHTML(\n        code,\n        fence.lang,\n        fence.meta,\n        { themeName, ...twoslashSettings },\n        highlighter,\n        twoslash\n      );\n    });\n    results = output.join(\"\\n\");\n    if (highlighters.length > 1 && twoslashSettings.wrapFragments) {\n      results = `<div class=\"shiki-twoslash-fragment\">${results}</div>`;\n    }\n  }\n  return results;\n}\n\n/**\n * Runs twoslash across an AST node, switching out the text content, and lang\n * and adding a `twoslash` property to the node.\n */\nexport const runTwoSlashOnNode = (\n  code: string,\n  { lang, meta }: Fence,\n  settings: UserConfigSettings = {}\n) => {\n  // Offer a way to do high-perf iterations, this is less useful\n  // given that we cache the results of twoslash in the file-system\n  const shouldDisableTwoslash =\n    typeof process !== \"undefined\" &&\n    process.env &&\n    !!process.env.TWOSLASH_DISABLE;\n  if (shouldDisableTwoslash) return undefined;\n\n  // Only run twoslash when the meta has the attribute twoslash\n  if (meta.twoslash) {\n    const importedCode = replaceIncludesInCode(includes, code);\n    return cachedTwoslashCall(importedCode, lang, settings);\n  }\n\n  return undefined;\n};\n\n// To make sure we only have one highlighter per theme in a process\nconst highlighterCache = new Map<UserConfigSettings, Promise<Highlighter[]>>();\n\n/** Sets up the highlighters, and cache's for recalls */\nexport const highlightersFromSettings = (settings: UserConfigSettings) => {\n  // console.log(\"i should only log once per theme\")\n  // ^ uncomment this to debug if required\n  const themes =\n    settings.themes || (settings.theme ? [settings.theme] : [\"light-plus\"]);\n\n  return Promise.all(\n    themes.map(async (theme) => {\n      // You can put a string, a path, or the JSON theme obj\n      const themeName = (theme as any).name || theme;\n      const highlighter = await getHighlighter({\n        ...settings,\n        theme,\n        themes: undefined,\n      });\n\n      // @ts-ignore - https://github.com/shikijs/shiki/pull/162 will fix this\n      highlighter.customName = themeName;\n      return highlighter;\n    })\n  );\n};\n\nconst parsingNewFile = () => includes.clear();\n\nconst parseFence = (fence: string): Fence => {\n  const [lang, ...tokens] = lex(fence);\n\n  // if the language is twoslash and include key is found\n  // insert an `=` after include to make it `include=[name]`\n  // which yields better meta\n  if (lang === \"twoslash\") {\n    // Search for `include` in tokens\n    const index = tokens.indexOf(\"include\");\n    if (index !== -1) {\n      tokens.splice(index + 1, 0, \"=\");\n    }\n  }\n\n  const meta = parse(tokens) ?? {};\n\n  return {\n    lang: (lang || \"\").toString(),\n    meta,\n  };\n};\n\n// --- The Remark API ---\n\n/* A rich AST node for uninst with twoslash'd data */\nexport type RemarkCodeNode = Node & {\n  lang?: Lang;\n  meta?: string;\n  // ^ according to mdast\n  type: string;\n  value: string;\n  children: Node[];\n  twoslash?: TwoSlashReturn;\n};\n\nexport type Options = UserConfigSettings;\n\n/**\n * Synchronous outer function, async inner function, which is how the remark\n * async API works.\n */\nfunction remarkTwoslash(settings: Options = {}) {\n  if (!highlighterCache.has(settings)) {\n    highlighterCache.set(settings, highlightersFromSettings(settings));\n  }\n\n  const transform: Transformer = async (markdownAST) => {\n    const highlighters = await highlighterCache.get(settings)!;\n    parsingNewFile();\n    visit(markdownAST, \"code\", remarkVisitor(highlighters, settings));\n  };\n\n  return transform;\n}\n\n/**\n * The function doing the work of transforming any codeblock samples in a remark AST.\n */\nexport const remarkVisitor =\n  (highlighters: Highlighter[], twoslashSettings: UserConfigSettings = {}) =>\n  (node: RemarkCodeNode) => {\n    const code = node.value;\n    let fence: Fence = undefined!;\n\n    try {\n      fence = parseFence([node.lang, node.meta].filter(Boolean).join(\" \"));\n    } catch (error) {\n      const twoslashError = new TwoslashError(\n        \"Codefence error\",\n        \"Could not parse the codefence for this code sample\",\n        \"It's usually an unclosed string\",\n        code\n      );\n      return setupNodeForTwoslashException(code, node, twoslashError);\n    }\n\n    // Do nothing if the node has an attribute to ignore\n    if (\n      Object.keys(fence.meta).filter((key) =>\n        (twoslashSettings.ignoreCodeblocksWithCodefenceMeta || []).includes(key)\n      ).length > 0\n    ) {\n      return;\n    }\n\n    let twoslash: TwoSlashReturn | undefined;\n    try {\n      // By allowing node.twoslash to already exist you can set it up yourself in a browser\n      twoslash =\n        node.twoslash || runTwoSlashOnNode(code, fence, twoslashSettings);\n    } catch (error) {\n      const shouldAlwaysRaise = process && process.env && !!process.env.CI;\n      const yeahButNotInTests = typeof jest === \"undefined\";\n\n      if (\n        (shouldAlwaysRaise && yeahButNotInTests) ||\n        twoslashSettings.alwayRaiseForTwoslashExceptions\n      ) {\n        throw error;\n      } else {\n        return setupNodeForTwoslashException(code, node, error);\n      }\n    }\n\n    if (twoslash) {\n      node.value = twoslash.code;\n      node.lang = twoslash.extension as Lang;\n      node.twoslash = twoslash;\n    }\n\n    const shikiHTML = getHTML(\n      node.value,\n      fence,\n      highlighters,\n      twoslash,\n      twoslashSettings\n    );\n    node.type = \"html\";\n    node.value = shikiHTML;\n    node.children = [];\n  };\n\nexport default remarkTwoslash;\n\n// --- The Markdown-it API ---\n\n/** Only the inner function exposed as a synchronous API for markdown-it */\n\nexport const setupForFile = async (settings: UserConfigSettings = {}) => {\n  parsingNewFile();\n\n  if (!highlighterCache.has(settings)) {\n    highlighterCache.set(settings, highlightersFromSettings(settings));\n  }\n\n  let highlighters = await highlighterCache.get(settings)!;\n  return { settings, highlighters };\n};\n\nexport const transformAttributesToHTML = (\n  code: string,\n  fenceString: string,\n  highlighters: Highlighter[],\n  settings: UserConfigSettings\n) => {\n  const fence = parseFence(fenceString);\n\n  const twoslash = runTwoSlashOnNode(code, fence, settings);\n  const newCode = (twoslash && twoslash.code) || code;\n  return getHTML(newCode, fence, highlighters, twoslash, settings);\n};\n","export const addIncludes = (map: Map<string, string>, name: string, code: string) => {\n  const lines: string[] = []\n\n  code.split(\"\\n\").forEach((l, _i) => {\n    const trimmed = l.trim()\n\n    if (trimmed.startsWith(\"// - \")) {\n      const key = trimmed.split(\"// - \")[1].split(\" \")[0]\n      map.set(name + \"-\" + key, lines.join(\"\\n\"))\n    } else {\n      lines.push(l)\n    }\n  })\n  map.set(name, lines.join(\"\\n\"))\n}\n\nexport const replaceIncludesInCode = (_map: Map<string, string>, code: string) => {\n  const includes = /\\/\\/ @include: (.*)$/gm\n\n  // Basically run a regex over the code replacing any // @include: thing with\n  // 'thing' from the map\n\n  // const toReplace: [index:number, length: number, str: string][] = []\n  const toReplace: [number, number, string][] = []\n\n  let match\n  while ((match = includes.exec(code)) !== null) {\n    // This is necessary to avoid infinite loops with zero-width matches\n    if (match.index === includes.lastIndex) {\n      includes.lastIndex++\n    }\n    const key = match[1]\n    const replaceWith = _map.get(key)\n\n    if (!replaceWith) {\n      const msg = `Could not find an include with the key: '${key}'.\\nThere is: ${Array.from(_map.keys())}.`\n      throw new Error(msg)\n    }\n\n    toReplace.push([match.index, match[0].length, replaceWith])\n  }\n\n  let newCode = code.toString()\n  // Go backwards through the found changes so that we can retain index position\n  toReplace.reverse().forEach(r => {\n    newCode = newCode.substring(0, r[0]) + r[2] + newCode.substring(r[0] + r[1])\n  })\n  return newCode\n}\n","import { UserConfigSettings, runTwoSlash } from \"@olets/shiki-twoslash\";\nimport type { TwoSlashReturn } from \"@typescript/twoslash\";\n\n/**\n * Keeps a cache of the JSON responses to a twoslash call in node_modules/.cache/twoslash\n * which should keep CI times down (e.g. the epub vs the handbook etc) - but also during\n * dev time, where it can be super useful.\n */\nexport const cachedTwoslashCall = (\n  code: string,\n  lang: string,\n  settings: UserConfigSettings\n): TwoSlashReturn | undefined => {\n  const isWebWorker =\n    typeof self !== \"undefined\" &&\n    // @ts-expect-error\n    typeof self.WorkerGlobalScope !== \"undefined\";\n  const isBrowser =\n    isWebWorker ||\n    (typeof window !== \"undefined\" &&\n      typeof window.document !== \"undefined\" &&\n      typeof fetch !== \"undefined\");\n\n  if (isBrowser) {\n    // Not in Node, run un-cached\n    return runTwoSlash(code, lang, settings);\n  }\n\n  const { createHash } = require(\"crypto\");\n  const { readFileSync, existsSync, mkdirSync, writeFileSync } = require(\"fs\");\n  const { join } = require(\"path\");\n\n  const shikiVersion = require(\"@typescript/twoslash/package.json\").version;\n  const tsVersion = require(\"typescript/package.json\").version;\n  const shasum = createHash(\"sha1\");\n  const codeSha = shasum\n    .update(`${code}-${shikiVersion}-${tsVersion}`)\n    .digest(\"hex\");\n\n  const getNmCache = () => {\n    if (__dirname.includes(\"node_modules\")) {\n      return join(\n        __dirname.split(\"node_modules\")[0],\n        \"node_modules\",\n        \".cache\",\n        \"twoslash\"\n      );\n    } else {\n      return join(__dirname, \"..\", \"..\", \".cache\", \"twoslash\");\n    }\n  };\n\n  const getPnpCache = () => {\n    try {\n      const pnp = require(\"pnpapi\");\n      return join(\n        pnp.getPackageInformation(pnp.topLevel).packageLocation,\n        \"node_modules\",\n        \".cache\",\n        \"twoslash\"\n      );\n    } catch (error) {\n      return getNmCache();\n    }\n  };\n\n  const cacheRoot = process.versions.pnp ? getPnpCache() : getNmCache();\n\n  const cachePath = join(cacheRoot, `${codeSha}.json`);\n\n  if (existsSync(cachePath)) {\n    if (process.env.debug)\n      console.log(`Using cached twoslash results from ${cachePath}`);\n\n    return JSON.parse(readFileSync(cachePath, \"utf8\"));\n  } else {\n    const results = runTwoSlash(code, lang, settings);\n    if (!existsSync(cacheRoot)) mkdirSync(cacheRoot, { recursive: true });\n    writeFileSync(cachePath, JSON.stringify(results), \"utf8\");\n    return results;\n  }\n};\n"],"names":["escapeHtml","html","replace","setupNodeForTwoslashException","code","node","error","isBrowser","self","WorkerGlobalScope","window","document","fetch","isJest","jest","eLog","_str","console","body","String","TwoslashError","title","description","recommendation","bodyFromTwoslashError","Error","message","split","bodyFromError","type","value","children","includes","Map","getHTML","fence","highlighters","twoslash","twoslashSettings","results","replacer","json5","lang","meta","include","map","name","lines","forEach","l","_i","trimmed","trim","startsWith","key","set","join","push","addIncludes","wrapFragments","highlighter","themeName","customName","pop","renderCodeToHTML","_extends","length","runTwoSlashOnNode","_ref","settings","process","env","TWOSLASH_DISABLE","runTwoSlash","createHash","require","_require2","readFileSync","existsSync","mkdirSync","writeFileSync","shikiVersion","version","tsVersion","codeSha","update","digest","getNmCache","__dirname","cacheRoot","versions","pnp","getPackageInformation","topLevel","packageLocation","getPnpCache","cachePath","debug","log","JSON","parse","recursive","stringify","cachedTwoslashCall","_map","match","toReplace","exec","index","lastIndex","replaceWith","get","msg","Array","from","keys","newCode","toString","reverse","r","substring","replaceIncludesInCode","highlighterCache","highlightersFromSettings","Promise","all","themes","theme","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","getHighlighter","undefined","sent","abrupt","stop","_x","apply","arguments","parsingNewFile","clear","parseFence","_lex","lex","tokens","slice","indexOf","splice","_parse","remarkVisitor","filter","Boolean","twoslashError","Object","ignoreCodeblocksWithCodefenceMeta","shouldAlwaysRaise","CI","yeahButNotInTests","alwayRaiseForTwoslashExceptions","extension","shikiHTML","setupForFile","_ref4","_callee3","has","_context3","_x3","_ref3","_callee2","markdownAST","_context2","visit","_x2","fenceString"],"mappings":"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"}