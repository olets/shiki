{"version":3,"file":"remark-shiki-twoslash.cjs.development.js","sources":["../src/caching.ts","../src/includes.ts","../src/exceptionMessageDOM.ts","../src/index.ts"],"sourcesContent":["import { UserConfigSettings, runTwoSlash } from \"@olets/shiki-twoslash\";\nimport type { TwoSlashReturn } from \"@typescript/twoslash\";\n\n/**\n * Keeps a cache of the JSON responses to a twoslash call in node_modules/.cache/twoslash\n * which should keep CI times down (e.g. the epub vs the handbook etc) - but also during\n * dev time, where it can be super useful.\n */\nexport async function cachedTwoslashCall(\n  code: string,\n  lang: string,\n  settings: UserConfigSettings\n): Promise<TwoSlashReturn | undefined> {\n  const isWebWorker =\n    typeof self !== \"undefined\" &&\n    // @ts-expect-error\n    typeof self.WorkerGlobalScope !== \"undefined\";\n  const isBrowser =\n    isWebWorker ||\n    (typeof window !== \"undefined\" &&\n      typeof window.document !== \"undefined\" &&\n      typeof fetch !== \"undefined\");\n\n  if (isBrowser) {\n    // Not in Node, run un-cached\n    return runTwoSlash(code, lang, settings);\n  }\n\n  const { createHash } = await import(\"crypto\");\n  const { readFileSync, existsSync, mkdirSync, writeFileSync } = await import(\n    \"fs\"\n  );\n  const { join } = await import(\"path\");\n\n  const shikiVersion = await import(\"@typescript/twoslash/package.json\").then(\n    (m) => m.version\n  );\n  const tsVersion = await import(\"typescript/package.json\").then(\n    (m) => m.version\n  );\n  const shasum = createHash(\"sha1\");\n  const codeSha = shasum\n    .update(`${code}-${shikiVersion}-${tsVersion}`)\n    .digest(\"hex\");\n\n  const getNmCache = () => {\n    if (__dirname.includes(\"node_modules\")) {\n      return join(\n        __dirname.split(\"node_modules\")[0],\n        \"node_modules\",\n        \".cache\",\n        \"twoslash\"\n      );\n    } else {\n      return join(__dirname, \"..\", \"..\", \".cache\", \"twoslash\");\n    }\n  };\n\n  async function getPnpCache() {\n    try {\n      // @ts-expect-error ts(2307)\n      const pnp = await import(\"pnpapi\");\n      return join(\n        pnp.getPackageInformation(pnp.topLevel).packageLocation,\n        \"node_modules\",\n        \".cache\",\n        \"twoslash\"\n      );\n    } catch (error) {\n      return getNmCache();\n    }\n  }\n\n  const cacheRoot = process.versions.pnp ? getPnpCache() : getNmCache();\n\n  const cachePath = join(await cacheRoot, `${codeSha}.json`);\n\n  if (existsSync(cachePath)) {\n    if (process.env.debug)\n      console.log(`Using cached twoslash results from ${cachePath}`);\n\n    return JSON.parse(readFileSync(cachePath, \"utf8\"));\n  } else {\n    const results = runTwoSlash(code, lang, settings);\n    if (!existsSync(await cacheRoot))\n      mkdirSync(await cacheRoot, { recursive: true });\n    writeFileSync(cachePath, JSON.stringify(results), \"utf8\");\n    return results;\n  }\n}\n","export const addIncludes = (map: Map<string, string>, name: string, code: string) => {\n  const lines: string[] = []\n\n  code.split(\"\\n\").forEach((l, _i) => {\n    const trimmed = l.trim()\n\n    if (trimmed.startsWith(\"// - \")) {\n      const key = trimmed.split(\"// - \")[1].split(\" \")[0]\n      map.set(name + \"-\" + key, lines.join(\"\\n\"))\n    } else {\n      lines.push(l)\n    }\n  })\n  map.set(name, lines.join(\"\\n\"))\n}\n\nexport const replaceIncludesInCode = (_map: Map<string, string>, code: string) => {\n  const includes = /\\/\\/ @include: (.*)$/gm\n\n  // Basically run a regex over the code replacing any // @include: thing with\n  // 'thing' from the map\n\n  // const toReplace: [index:number, length: number, str: string][] = []\n  const toReplace: [number, number, string][] = []\n\n  let match\n  while ((match = includes.exec(code)) !== null) {\n    // This is necessary to avoid infinite loops with zero-width matches\n    if (match.index === includes.lastIndex) {\n      includes.lastIndex++\n    }\n    const key = match[1]\n    const replaceWith = _map.get(key)\n\n    if (!replaceWith) {\n      const msg = `Could not find an include with the key: '${key}'.\\nThere is: ${Array.from(_map.keys())}.`\n      throw new Error(msg)\n    }\n\n    toReplace.push([match.index, match[0].length, replaceWith])\n  }\n\n  let newCode = code.toString()\n  // Go backwards through the found changes so that we can retain index position\n  toReplace.reverse().forEach(r => {\n    newCode = newCode.substring(0, r[0]) + r[2] + newCode.substring(r[0] + r[1])\n  })\n  return newCode\n}\n","import type { RemarkCodeNode } from \"./index\"\n\nimport {TwoslashError} from \"@typescript/twoslash\"\n\nfunction escapeHtml(html: string) {\n  return html.replace(/</g, \"&lt;\").replace(/>/g, \"&gt;\")\n}\n\nexport const setupNodeForTwoslashException = (code: string, node: RemarkCodeNode, error: unknown) => {\n    const css = `<style>\n@import url('http://fonts.cdnfonts.com/css/caslon-os'); \n\n.twoslash-fixed-error-note { \n    position: fixed;\n    top: 20px;\n    right: 20px;\n    display: flex;\n    align-items: center;\n    padding: .25rem .75rem;\n    color: black;\n    background-color: #FCF3D9;\n    background-clip: padding-box;\n    border-bottom: 1px solid rgba(0,0,0,.05);\n    border-radius: .25rem;\n    font-family: -apple-system,BlinkMacSystemFont,\"Segoe UI\",Roboto,\"Helvetica Neue\",Arial,\"Noto Sans\",sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\",\"Segoe UI Symbol\",\"Noto Color Emoji\";\n } \n\n #__docusaurus .twoslash-fixed-error-note {\n    top: 80px;\n }\n\n .twoslash-fixed-error-note:hover {\n    border-bottom: 1px solid rgba(226, 61, 30, 0.8);\n }\n\n .twoslash-error-color {\n    background-color: #E23D1E;\n    width: 18px;\n    height: 18px;\n    border-radius: 9px;\n    margin-right:  10px;\n    color: black;\n }\n\n.twoslash-exception-message { \n    font-family: 'Caslon OS', sans-serif; \n    background-color: #FCF3D9;\n    font-size: 1.1rem;\n    padding: 2rem;\n    border-left: 2px solid #E23D1E;\n}\n\n.twoslash-exception-message p {\n    margin-top: 1rem;\n    margin-bottom: 0.6rem;\n}\n\n.twoslash-exception-message h3 { \n    margin-top: 0.6rem;\n    margin-bottom: 0.3rem;\n    font-size: 1.8rem;\n}\n\n.twoslash-exception-message code {\n     white-space: pre-wrap;\n     font-family: \"JetBrains Mono\", Menlo, Monaco, Consolas, Courier New, monospace;\n     margin-bottom: 20px;\n     background-color: #FCF3D9;\n     color: black;\n     border: none;\n     padding-left: 0;\n }\n\n .twoslash-exception-message > code {\n     display: block;\n     margin-bottom: 1.5rem;\n     margin-top: 3rem;\n }\n\n.twoslash-exception-code {\n    border-left: 2px solid #E5A604;\n    padding-left: 20px;\n    background-color: #FCF3D9;\n    color: black;\n}\n</style>`\n\n    const bodyFromTwoslashError = (error: TwoslashError) =>  {\n        return `\n<h3>${escapeHtml(error.title)}</h3>\n<p>${escapeHtml(error.description).replace(/(?:\\r\\n|\\r|\\n)/g, \"<br>\")}</p>\n<code>${escapeHtml(error.recommendation).replace(/(?:\\r\\n|\\r|\\n)/g, \"<br>\")}</code>\n`\n    }\n\n    const bodyFromError = (error: Error) => {\n        return `<pre><code>${error.message.split(\"## Code\")[0]}</code></pre>`\n    }\n\n    // @ts-ignore\n    const isWebWorker = typeof self !== \"undefined\" && typeof self.WorkerGlobalScope !== \"undefined\"\n    const isBrowser =\n      isWebWorker ||\n      (typeof window !== \"undefined\" && typeof window.document !== \"undefined\" && typeof fetch !== \"undefined\")\n  \n      const isJest = typeof jest !== \"undefined\"\n\n    const eLog = !isBrowser && !isJest ? console.error : (_str: string) => {}\n\n    let body = `<pre><code>${error}</code></pre>`\n    if (typeof error !== \"object\") {\n        body = String(error)\n        eLog(`### Unexpected error:`)\n        eLog(error)\n    } else if (error instanceof TwoslashError) {\n        body = bodyFromTwoslashError(error)\n        eLog(`### Twoslash error: ${error.title}`)\n        eLog(error.description)\n        eLog(error.recommendation)\n        eLog(\"\\n### Code Sample\")\n        eLog(code)\n    } else if (error instanceof Error) {\n        body = bodyFromError(error)\n        eLog(`### Unexpected error:`)\n        eLog(error)\n    }\n\n    const codeSample = `<p>Raising Code:</p><pre class='twoslash-exception-code'><code>${escapeHtml(code)}</code></pre>`\n\n    const html = `\n    <a href='#twoslash-error'><div class='twoslash-fixed-error-note'><span class='twoslash-error-color'></span>Twoslash failure</div></a>\n    <div class='twoslash-exception-message'>${body}${codeSample}</div>`\n\n\n    node.type = \"html\"\n    node.value =  \"<div id='twoslash-error'>\" + css + html + \"</div>\"\n    node.children = []\n}","import type { Node } from \"unist\";\nimport type { Transformer } from \"unified\";\nimport { TwoslashError, TwoSlashReturn } from \"@typescript/twoslash\";\n\nimport visit from \"unist-util-visit\";\nimport { lex, parse } from \"fenceparser\";\nimport { Lang, Highlighter, getHighlighter } from \"@olets/shiki\";\nimport { UserConfigSettings, renderCodeToHTML } from \"@olets/shiki-twoslash\";\n\nimport { cachedTwoslashCall } from \"./caching\";\nimport { addIncludes, replaceIncludesInCode } from \"./includes\";\nimport { setupNodeForTwoslashException } from \"./exceptionMessageDOM\";\n\ntype Fence = {\n  lang: string;\n  meta: NonNullable<ReturnType<typeof parse>>;\n};\n\n// A set of includes which can be pulled via a set ID\nconst includes = new Map<string, string>();\n\nfunction getHTML(\n  code: string,\n  fence: Fence,\n  highlighters: Highlighter[],\n  twoslash: TwoSlashReturn | undefined,\n  twoslashSettings: UserConfigSettings\n) {\n  // Shiki doesn't respect json5 as an input, so switch it\n  // to json, which can handle comments in the syntax highlight\n  const replacer: Record<string, string> = {\n    json5: \"json\",\n  };\n\n  if (replacer[fence.lang]) fence.lang = replacer[fence.lang];\n\n  let results;\n  // Support 'twoslash' includes\n  if (fence.lang === \"twoslash\") {\n    if (!fence.meta.include || typeof fence.meta.include !== \"string\") {\n      throw new Error(\n        \"A twoslash code block needs a pragma like 'twoslash include [name]'\"\n      );\n    }\n\n    addIncludes(includes, fence.meta.include as string, code);\n    results = twoslashSettings.wrapFragments\n      ? `<div class=\"shiki-twoslash-fragment\"></div>`\n      : \"\";\n  } else {\n    // All good, get each highlighter and render the shiki output for it\n    const output = highlighters.map((highlighter) => {\n      // @ts-ignore\n      const themeName: string = highlighter.customName\n        .split(\"/\")\n        .pop()\n        .replace(\".json\", \"\");\n      return renderCodeToHTML(\n        code,\n        fence.lang,\n        fence.meta,\n        { themeName, ...twoslashSettings },\n        highlighter,\n        twoslash\n      );\n    });\n    results = output.join(\"\\n\");\n    if (highlighters.length > 1 && twoslashSettings.wrapFragments) {\n      results = `<div class=\"shiki-twoslash-fragment\">${results}</div>`;\n    }\n  }\n  return results;\n}\n\n/**\n * Runs twoslash across an AST node, switching out the text content, and lang\n * and adding a `twoslash` property to the node.\n */\nexport const runTwoSlashOnNode = (\n  code: string,\n  { lang, meta }: Fence,\n  settings: UserConfigSettings = {}\n) => {\n  // Offer a way to do high-perf iterations, this is less useful\n  // given that we cache the results of twoslash in the file-system\n  const shouldDisableTwoslash =\n    typeof process !== \"undefined\" &&\n    process.env &&\n    !!process.env.TWOSLASH_DISABLE;\n  if (shouldDisableTwoslash) return undefined;\n\n  // Only run twoslash when the meta has the attribute twoslash\n  if (meta.twoslash) {\n    const importedCode = replaceIncludesInCode(includes, code);\n    return cachedTwoslashCall(importedCode, lang, settings);\n  }\n\n  return undefined;\n};\n\n// To make sure we only have one highlighter per theme in a process\nconst highlighterCache = new Map<UserConfigSettings, Promise<Highlighter[]>>();\n\n/** Sets up the highlighters, and cache's for recalls */\nexport const highlightersFromSettings = (settings: UserConfigSettings) => {\n  // console.log(\"i should only log once per theme\")\n  // ^ uncomment this to debug if required\n  const themes =\n    settings.themes || (settings.theme ? [settings.theme] : [\"light-plus\"]);\n\n  return Promise.all(\n    themes.map(async (theme) => {\n      // You can put a string, a path, or the JSON theme obj\n      const themeName = (theme as any).name || theme;\n      const highlighter = await getHighlighter({\n        ...settings,\n        theme,\n        themes: undefined,\n      });\n\n      // @ts-ignore - https://github.com/shikijs/shiki/pull/162 will fix this\n      highlighter.customName = themeName;\n      return highlighter;\n    })\n  );\n};\n\nconst parsingNewFile = () => includes.clear();\n\nconst parseFence = (fence: string): Fence => {\n  const [lang, ...tokens] = lex(fence);\n\n  // if the language is twoslash and include key is found\n  // insert an `=` after include to make it `include=[name]`\n  // which yields better meta\n  if (lang === \"twoslash\") {\n    // Search for `include` in tokens\n    const index = tokens.indexOf(\"include\");\n    if (index !== -1) {\n      tokens.splice(index + 1, 0, \"=\");\n    }\n  }\n\n  const meta = parse(tokens) ?? {};\n\n  return {\n    lang: (lang || \"\").toString(),\n    meta,\n  };\n};\n\n// --- The Remark API ---\n\n/* A rich AST node for uninst with twoslash'd data */\nexport type RemarkCodeNode = Node & {\n  lang?: Lang;\n  meta?: string;\n  // ^ according to mdast\n  type: string;\n  value: string;\n  children: Node[];\n  twoslash?: TwoSlashReturn;\n};\n\nexport type Options = UserConfigSettings;\n\n/**\n * Synchronous outer function, async inner function, which is how the remark\n * async API works.\n */\nfunction remarkTwoslash(settings: Options = {}) {\n  if (!highlighterCache.has(settings)) {\n    highlighterCache.set(settings, highlightersFromSettings(settings));\n  }\n\n  const transform: Transformer = async (markdownAST) => {\n    const highlighters = await highlighterCache.get(settings)!;\n    parsingNewFile();\n    visit(markdownAST, \"code\", remarkVisitor(highlighters, settings));\n  };\n\n  return transform;\n}\n\n/**\n * The function doing the work of transforming any codeblock samples in a remark AST.\n */\nexport function remarkVisitor(\n  highlighters: Highlighter[],\n  twoslashSettings: UserConfigSettings = {}\n) {\n  return async (node: RemarkCodeNode) => {\n    const code = node.value;\n    let fence: Fence = undefined!;\n\n    try {\n      fence = parseFence([node.lang, node.meta].filter(Boolean).join(\" \"));\n    } catch (error) {\n      const twoslashError = new TwoslashError(\n        \"Codefence error\",\n        \"Could not parse the codefence for this code sample\",\n        \"It's usually an unclosed string\",\n        code\n      );\n      return setupNodeForTwoslashException(code, node, twoslashError);\n    }\n\n    // Do nothing if the node has an attribute to ignore\n    if (\n      Object.keys(fence.meta).filter((key) =>\n        (twoslashSettings.ignoreCodeblocksWithCodefenceMeta || []).includes(key)\n      ).length > 0\n    ) {\n      return;\n    }\n\n    let twoslash: TwoSlashReturn | undefined;\n    try {\n      // By allowing node.twoslash to already exist you can set it up yourself in a browser\n      twoslash =\n        node.twoslash ||\n        (await runTwoSlashOnNode(code, fence, twoslashSettings));\n    } catch (error) {\n      const shouldAlwaysRaise = process && process.env && !!process.env.CI;\n      const yeahButNotInTests = typeof jest === \"undefined\";\n\n      if (\n        (shouldAlwaysRaise && yeahButNotInTests) ||\n        twoslashSettings.alwayRaiseForTwoslashExceptions\n      ) {\n        throw error;\n      } else {\n        return setupNodeForTwoslashException(code, node, error);\n      }\n    }\n\n    if (twoslash) {\n      node.value = twoslash.code;\n      node.lang = twoslash.extension as Lang;\n      node.twoslash = twoslash;\n    }\n\n    const shikiHTML = getHTML(\n      node.value,\n      fence,\n      highlighters,\n      twoslash,\n      twoslashSettings\n    );\n    node.type = \"html\";\n    node.value = shikiHTML;\n    node.children = [];\n  };\n}\n\nexport default remarkTwoslash;\n\n// --- The Markdown-it API ---\n\n/** Only the inner function exposed as a synchronous API for markdown-it */\n\nexport const setupForFile = async (settings: UserConfigSettings = {}) => {\n  parsingNewFile();\n\n  if (!highlighterCache.has(settings)) {\n    highlighterCache.set(settings, highlightersFromSettings(settings));\n  }\n\n  let highlighters = await highlighterCache.get(settings)!;\n  return { settings, highlighters };\n};\n\nexport async function transformAttributesToHTML(\n  code: string,\n  fenceString: string,\n  highlighters: Highlighter[],\n  settings: UserConfigSettings\n) {\n  const fence = parseFence(fenceString);\n\n  const twoslash = await runTwoSlashOnNode(code, fence, settings);\n  const newCode = (twoslash && twoslash.code) || code;\n  return getHTML(newCode, fence, highlighters, twoslash, settings);\n}\n"],"names":["cachedTwoslashCall","_x","_x2","_x3","_cachedTwoslashCall","apply","arguments","_asyncToGenerator","_regeneratorRuntime","mark","_callee2","code","lang","settings","isWebWorker","isBrowser","_yield$import","createHash","_yield$import2","readFileSync","existsSync","mkdirSync","writeFileSync","_yield$import3","join","shikiVersion","tsVersion","shasum","codeSha","getNmCache","getPnpCache","_getPnpCache","cacheRoot","cachePath","results","wrap","_callee2$","_context2","prev","next","_getPnpCache3","_callee","pnp","_callee$","_context","sent","abrupt","getPackageInformation","topLevel","packageLocation","t0","stop","_getPnpCache2","self","WorkerGlobalScope","window","document","fetch","runTwoSlash","then","m","version","update","digest","__dirname","includes","split","process","versions","t1","t2","env","debug","console","log","JSON","parse","t3","t4","t5","t6","t7","recursive","stringify","addIncludes","map","name","lines","forEach","l","_i","trimmed","trim","startsWith","key","set","push","replaceIncludesInCode","_map","toReplace","match","exec","index","lastIndex","replaceWith","get","msg","Array","from","keys","Error","length","newCode","toString","reverse","r","substring","escapeHtml","html","replace","setupNodeForTwoslashException","node","error","css","bodyFromTwoslashError","title","description","recommendation","bodyFromError","message","isJest","jest","eLog","_str","body","String","TwoslashError","codeSample","type","value","children","Map","getHTML","fence","highlighters","twoslash","twoslashSettings","replacer","json5","meta","include","wrapFragments","output","highlighter","themeName","customName","pop","renderCodeToHTML","_extends","runTwoSlashOnNode","_ref","shouldDisableTwoslash","TWOSLASH_DISABLE","undefined","importedCode","highlighterCache","highlightersFromSettings","themes","theme","Promise","all","_ref2","getHighlighter","parsingNewFile","clear","parseFence","_lex","lex","tokens","slice","indexOf","splice","_parse","remarkTwoslash","has","transform","_ref3","markdownAST","visit","remarkVisitor","_ref4","_callee3","twoslashError","shouldAlwaysRaise","yeahButNotInTests","shikiHTML","_callee3$","_context3","filter","Boolean","Object","ignoreCodeblocksWithCodefenceMeta","CI","alwayRaiseForTwoslashExceptions","extension","setupForFile","_ref5","_callee4","_context4","_x4","transformAttributesToHTML","_x5","_x6","_x7","_x8","_transformAttributesToHTML","_callee5","fenceString","_callee5$","_context5"],"mappings":"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"}