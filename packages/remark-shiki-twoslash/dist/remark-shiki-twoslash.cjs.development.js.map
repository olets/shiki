{"version":3,"file":"remark-shiki-twoslash.cjs.development.js","sources":["../src/caching.ts","../src/includes.ts","../src/exceptionMessageDOM.ts","../src/index.ts"],"sourcesContent":["import { UserConfigSettings, runTwoSlash } from \"@olets/shiki-twoslash\";\nimport type { TwoSlashReturn } from \"@typescript/twoslash\";\n\n/**\n * Keeps a cache of the JSON responses to a twoslash call in node_modules/.cache/twoslash\n * which should keep CI times down (e.g. the epub vs the handbook etc) - but also during\n * dev time, where it can be super useful.\n */\nexport const cachedTwoslashCall = (\n  code: string,\n  lang: string,\n  settings: UserConfigSettings\n): TwoSlashReturn | undefined => {\n  const isWebWorker =\n    typeof self !== \"undefined\" &&\n    // @ts-expect-error\n    typeof self.WorkerGlobalScope !== \"undefined\";\n  const isBrowser =\n    isWebWorker ||\n    (typeof window !== \"undefined\" &&\n      typeof window.document !== \"undefined\" &&\n      typeof fetch !== \"undefined\");\n\n  if (isBrowser) {\n    // Not in Node, run un-cached\n    return runTwoSlash(code, lang, settings);\n  }\n\n  const { createHash } = require(\"crypto\");\n  const { readFileSync, existsSync, mkdirSync, writeFileSync } = require(\"fs\");\n  const { join } = require(\"path\");\n\n  const shikiVersion = require(\"@typescript/twoslash/package.json\").version;\n  const tsVersion = require(\"typescript/package.json\").version;\n  const shasum = createHash(\"sha1\");\n  const codeSha = shasum\n    .update(`${code}-${shikiVersion}-${tsVersion}`)\n    .digest(\"hex\");\n\n  const getNmCache = () => {\n    if (__dirname.includes(\"node_modules\")) {\n      return join(\n        __dirname.split(\"node_modules\")[0],\n        \"node_modules\",\n        \".cache\",\n        \"twoslash\"\n      );\n    } else {\n      return join(__dirname, \"..\", \"..\", \".cache\", \"twoslash\");\n    }\n  };\n\n  const getPnpCache = () => {\n    try {\n      const pnp = require(\"pnpapi\");\n      return join(\n        pnp.getPackageInformation(pnp.topLevel).packageLocation,\n        \"node_modules\",\n        \".cache\",\n        \"twoslash\"\n      );\n    } catch (error) {\n      return getNmCache();\n    }\n  };\n\n  const cacheRoot = process.versions.pnp ? getPnpCache() : getNmCache();\n\n  const cachePath = join(cacheRoot, `${codeSha}.json`);\n\n  if (existsSync(cachePath)) {\n    if (process.env.debug)\n      console.log(`Using cached twoslash results from ${cachePath}`);\n\n    return JSON.parse(readFileSync(cachePath, \"utf8\"));\n  } else {\n    const results = runTwoSlash(code, lang, settings);\n    if (!existsSync(cacheRoot)) mkdirSync(cacheRoot, { recursive: true });\n    writeFileSync(cachePath, JSON.stringify(results), \"utf8\");\n    return results;\n  }\n};\n","export const addIncludes = (map: Map<string, string>, name: string, code: string) => {\n  const lines: string[] = []\n\n  code.split(\"\\n\").forEach((l, _i) => {\n    const trimmed = l.trim()\n\n    if (trimmed.startsWith(\"// - \")) {\n      const key = trimmed.split(\"// - \")[1].split(\" \")[0]\n      map.set(name + \"-\" + key, lines.join(\"\\n\"))\n    } else {\n      lines.push(l)\n    }\n  })\n  map.set(name, lines.join(\"\\n\"))\n}\n\nexport const replaceIncludesInCode = (_map: Map<string, string>, code: string) => {\n  const includes = /\\/\\/ @include: (.*)$/gm\n\n  // Basically run a regex over the code replacing any // @include: thing with\n  // 'thing' from the map\n\n  // const toReplace: [index:number, length: number, str: string][] = []\n  const toReplace: [number, number, string][] = []\n\n  let match\n  while ((match = includes.exec(code)) !== null) {\n    // This is necessary to avoid infinite loops with zero-width matches\n    if (match.index === includes.lastIndex) {\n      includes.lastIndex++\n    }\n    const key = match[1]\n    const replaceWith = _map.get(key)\n\n    if (!replaceWith) {\n      const msg = `Could not find an include with the key: '${key}'.\\nThere is: ${Array.from(_map.keys())}.`\n      throw new Error(msg)\n    }\n\n    toReplace.push([match.index, match[0].length, replaceWith])\n  }\n\n  let newCode = code.toString()\n  // Go backwards through the found changes so that we can retain index position\n  toReplace.reverse().forEach(r => {\n    newCode = newCode.substring(0, r[0]) + r[2] + newCode.substring(r[0] + r[1])\n  })\n  return newCode\n}\n","import type { RemarkCodeNode } from \"./index\"\n\nimport {TwoslashError} from \"@typescript/twoslash\"\n\nfunction escapeHtml(html: string) {\n  return html.replace(/</g, \"&lt;\").replace(/>/g, \"&gt;\")\n}\n\nexport const setupNodeForTwoslashException = (code: string, node: RemarkCodeNode, error: unknown) => {\n    const css = `<style>\n@import url('http://fonts.cdnfonts.com/css/caslon-os'); \n\n.twoslash-fixed-error-note { \n    position: fixed;\n    top: 20px;\n    right: 20px;\n    display: flex;\n    align-items: center;\n    padding: .25rem .75rem;\n    color: black;\n    background-color: #FCF3D9;\n    background-clip: padding-box;\n    border-bottom: 1px solid rgba(0,0,0,.05);\n    border-radius: .25rem;\n    font-family: -apple-system,BlinkMacSystemFont,\"Segoe UI\",Roboto,\"Helvetica Neue\",Arial,\"Noto Sans\",sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\",\"Segoe UI Symbol\",\"Noto Color Emoji\";\n } \n\n #__docusaurus .twoslash-fixed-error-note {\n    top: 80px;\n }\n\n .twoslash-fixed-error-note:hover {\n    border-bottom: 1px solid rgba(226, 61, 30, 0.8);\n }\n\n .twoslash-error-color {\n    background-color: #E23D1E;\n    width: 18px;\n    height: 18px;\n    border-radius: 9px;\n    margin-right:  10px;\n    color: black;\n }\n\n.twoslash-exception-message { \n    font-family: 'Caslon OS', sans-serif; \n    background-color: #FCF3D9;\n    font-size: 1.1rem;\n    padding: 2rem;\n    border-left: 2px solid #E23D1E;\n}\n\n.twoslash-exception-message p {\n    margin-top: 1rem;\n    margin-bottom: 0.6rem;\n}\n\n.twoslash-exception-message h3 { \n    margin-top: 0.6rem;\n    margin-bottom: 0.3rem;\n    font-size: 1.8rem;\n}\n\n.twoslash-exception-message code {\n     white-space: pre-wrap;\n     font-family: \"JetBrains Mono\", Menlo, Monaco, Consolas, Courier New, monospace;\n     margin-bottom: 20px;\n     background-color: #FCF3D9;\n     color: black;\n     border: none;\n     padding-left: 0;\n }\n\n .twoslash-exception-message > code {\n     display: block;\n     margin-bottom: 1.5rem;\n     margin-top: 3rem;\n }\n\n.twoslash-exception-code {\n    border-left: 2px solid #E5A604;\n    padding-left: 20px;\n    background-color: #FCF3D9;\n    color: black;\n}\n</style>`\n\n    const bodyFromTwoslashError = (error: TwoslashError) =>  {\n        return `\n<h3>${escapeHtml(error.title)}</h3>\n<p>${escapeHtml(error.description).replace(/(?:\\r\\n|\\r|\\n)/g, \"<br>\")}</p>\n<code>${escapeHtml(error.recommendation).replace(/(?:\\r\\n|\\r|\\n)/g, \"<br>\")}</code>\n`\n    }\n\n    const bodyFromError = (error: Error) => {\n        return `<pre><code>${error.message.split(\"## Code\")[0]}</code></pre>`\n    }\n\n    // @ts-ignore\n    const isWebWorker = typeof self !== \"undefined\" && typeof self.WorkerGlobalScope !== \"undefined\"\n    const isBrowser =\n      isWebWorker ||\n      (typeof window !== \"undefined\" && typeof window.document !== \"undefined\" && typeof fetch !== \"undefined\")\n  \n      const isJest = typeof jest !== \"undefined\"\n\n    const eLog = !isBrowser && !isJest ? console.error : (_str: string) => {}\n\n    let body = `<pre><code>${error}</code></pre>`\n    if (typeof error !== \"object\") {\n        body = String(error)\n        eLog(`### Unexpected error:`)\n        eLog(error)\n    } else if (error instanceof TwoslashError) {\n        body = bodyFromTwoslashError(error)\n        eLog(`### Twoslash error: ${error.title}`)\n        eLog(error.description)\n        eLog(error.recommendation)\n        eLog(\"\\n### Code Sample\")\n        eLog(code)\n    } else if (error instanceof Error) {\n        body = bodyFromError(error)\n        eLog(`### Unexpected error:`)\n        eLog(error)\n    }\n\n    const codeSample = `<p>Raising Code:</p><pre class='twoslash-exception-code'><code>${escapeHtml(code)}</code></pre>`\n\n    const html = `\n    <a href='#twoslash-error'><div class='twoslash-fixed-error-note'><span class='twoslash-error-color'></span>Twoslash failure</div></a>\n    <div class='twoslash-exception-message'>${body}${codeSample}</div>`\n\n\n    node.type = \"html\"\n    node.value =  \"<div id='twoslash-error'>\" + css + html + \"</div>\"\n    node.children = []\n}","import type { Node } from \"unist\";\nimport type { Transformer } from \"unified\";\nimport { TwoslashError, TwoSlashReturn } from \"@typescript/twoslash\";\n\nimport visit from \"unist-util-visit\";\nimport { lex, parse } from \"fenceparser\";\nimport { Lang, Highlighter, getHighlighter } from \"@olets/shiki\";\nimport { UserConfigSettings, renderCodeToHTML } from \"@olets/shiki-twoslash\";\n\nimport { cachedTwoslashCall } from \"./caching\";\nimport { addIncludes, replaceIncludesInCode } from \"./includes\";\nimport { setupNodeForTwoslashException } from \"./exceptionMessageDOM\";\n\ntype Fence = {\n  lang: string;\n  meta: NonNullable<ReturnType<typeof parse>>;\n};\n\n// A set of includes which can be pulled via a set ID\nconst includes = new Map<string, string>();\n\nfunction getHTML(\n  code: string,\n  fence: Fence,\n  highlighters: Highlighter[],\n  twoslash: TwoSlashReturn | undefined,\n  twoslashSettings: UserConfigSettings\n) {\n  // Shiki doesn't respect json5 as an input, so switch it\n  // to json, which can handle comments in the syntax highlight\n  const replacer: Record<string, string> = {\n    json5: \"json\",\n  };\n\n  if (replacer[fence.lang]) fence.lang = replacer[fence.lang];\n\n  let results;\n  // Support 'twoslash' includes\n  if (fence.lang === \"twoslash\") {\n    if (!fence.meta.include || typeof fence.meta.include !== \"string\") {\n      throw new Error(\n        \"A twoslash code block needs a pragma like 'twoslash include [name]'\"\n      );\n    }\n\n    addIncludes(includes, fence.meta.include as string, code);\n    results = twoslashSettings.wrapFragments\n      ? `<div class=\"shiki-twoslash-fragment\"></div>`\n      : \"\";\n  } else {\n    // All good, get each highlighter and render the shiki output for it\n    const output = highlighters.map((highlighter) => {\n      // @ts-ignore\n      const themeName: string = highlighter.customName\n        .split(\"/\")\n        .pop()\n        .replace(\".json\", \"\");\n      return renderCodeToHTML(\n        code,\n        fence.lang,\n        fence.meta,\n        { themeName, ...twoslashSettings },\n        highlighter,\n        twoslash\n      );\n    });\n    results = output.join(\"\\n\");\n    if (highlighters.length > 1 && twoslashSettings.wrapFragments) {\n      results = `<div class=\"shiki-twoslash-fragment\">${results}</div>`;\n    }\n  }\n  return results;\n}\n\n/**\n * Runs twoslash across an AST node, switching out the text content, and lang\n * and adding a `twoslash` property to the node.\n */\nexport const runTwoSlashOnNode = (\n  code: string,\n  { lang, meta }: Fence,\n  settings: UserConfigSettings = {}\n) => {\n  // Offer a way to do high-perf iterations, this is less useful\n  // given that we cache the results of twoslash in the file-system\n  const shouldDisableTwoslash =\n    typeof process !== \"undefined\" &&\n    process.env &&\n    !!process.env.TWOSLASH_DISABLE;\n  if (shouldDisableTwoslash) return undefined;\n\n  // Only run twoslash when the meta has the attribute twoslash\n  if (meta.twoslash) {\n    const importedCode = replaceIncludesInCode(includes, code);\n    return cachedTwoslashCall(importedCode, lang, settings);\n  }\n\n  return undefined;\n};\n\n// To make sure we only have one highlighter per theme in a process\nconst highlighterCache = new Map<UserConfigSettings, Promise<Highlighter[]>>();\n\n/** Sets up the highlighters, and cache's for recalls */\nexport const highlightersFromSettings = (settings: UserConfigSettings) => {\n  // console.log(\"i should only log once per theme\")\n  // ^ uncomment this to debug if required\n  const themes =\n    settings.themes || (settings.theme ? [settings.theme] : [\"light-plus\"]);\n\n  return Promise.all(\n    themes.map(async (theme) => {\n      // You can put a string, a path, or the JSON theme obj\n      const themeName = (theme as any).name || theme;\n      const highlighter = await getHighlighter({\n        ...settings,\n        theme,\n        themes: undefined,\n      });\n\n      // @ts-ignore - https://github.com/shikijs/shiki/pull/162 will fix this\n      highlighter.customName = themeName;\n      return highlighter;\n    })\n  );\n};\n\nconst parsingNewFile = () => includes.clear();\n\nconst parseFence = (fence: string): Fence => {\n  const [lang, ...tokens] = lex(fence);\n\n  // if the language is twoslash and include key is found\n  // insert an `=` after include to make it `include=[name]`\n  // which yields better meta\n  if (lang === \"twoslash\") {\n    // Search for `include` in tokens\n    const index = tokens.indexOf(\"include\");\n    if (index !== -1) {\n      tokens.splice(index + 1, 0, \"=\");\n    }\n  }\n\n  const meta = parse(tokens) ?? {};\n\n  return {\n    lang: (lang || \"\").toString(),\n    meta,\n  };\n};\n\n// --- The Remark API ---\n\n/* A rich AST node for uninst with twoslash'd data */\nexport type RemarkCodeNode = Node & {\n  lang?: Lang;\n  meta?: string;\n  // ^ according to mdast\n  type: string;\n  value: string;\n  children: Node[];\n  twoslash?: TwoSlashReturn;\n};\n\nexport type Options = UserConfigSettings;\n\n/**\n * Synchronous outer function, async inner function, which is how the remark\n * async API works.\n */\nfunction remarkTwoslash(settings: Options = {}) {\n  if (!highlighterCache.has(settings)) {\n    highlighterCache.set(settings, highlightersFromSettings(settings));\n  }\n\n  const transform: Transformer = async (markdownAST) => {\n    const highlighters = await highlighterCache.get(settings)!;\n    parsingNewFile();\n    visit(markdownAST, \"code\", remarkVisitor(highlighters, settings));\n  };\n\n  return transform;\n}\n\n/**\n * The function doing the work of transforming any codeblock samples in a remark AST.\n */\nexport const remarkVisitor =\n  (highlighters: Highlighter[], twoslashSettings: UserConfigSettings = {}) =>\n  (node: RemarkCodeNode) => {\n    const code = node.value;\n    let fence: Fence = undefined!;\n\n    try {\n      fence = parseFence([node.lang, node.meta].filter(Boolean).join(\" \"));\n    } catch (error) {\n      const twoslashError = new TwoslashError(\n        \"Codefence error\",\n        \"Could not parse the codefence for this code sample\",\n        \"It's usually an unclosed string\",\n        code\n      );\n      return setupNodeForTwoslashException(code, node, twoslashError);\n    }\n\n    // Do nothing if the node has an attribute to ignore\n    if (\n      Object.keys(fence.meta).filter((key) =>\n        (twoslashSettings.ignoreCodeblocksWithCodefenceMeta || []).includes(key)\n      ).length > 0\n    ) {\n      return;\n    }\n\n    let twoslash: TwoSlashReturn | undefined;\n    try {\n      // By allowing node.twoslash to already exist you can set it up yourself in a browser\n      twoslash =\n        node.twoslash || runTwoSlashOnNode(code, fence, twoslashSettings);\n    } catch (error) {\n      const shouldAlwaysRaise = process && process.env && !!process.env.CI;\n      const yeahButNotInTests = typeof jest === \"undefined\";\n\n      if (\n        (shouldAlwaysRaise && yeahButNotInTests) ||\n        twoslashSettings.alwayRaiseForTwoslashExceptions\n      ) {\n        throw error;\n      } else {\n        return setupNodeForTwoslashException(code, node, error);\n      }\n    }\n\n    if (twoslash) {\n      node.value = twoslash.code;\n      node.lang = twoslash.extension as Lang;\n      node.twoslash = twoslash;\n    }\n\n    const shikiHTML = getHTML(\n      node.value,\n      fence,\n      highlighters,\n      twoslash,\n      twoslashSettings\n    );\n    node.type = \"html\";\n    node.value = shikiHTML;\n    node.children = [];\n  };\n\nexport default remarkTwoslash;\n\n// --- The Markdown-it API ---\n\n/** Only the inner function exposed as a synchronous API for markdown-it */\n\nexport const setupForFile = async (settings: UserConfigSettings = {}) => {\n  parsingNewFile();\n\n  if (!highlighterCache.has(settings)) {\n    highlighterCache.set(settings, highlightersFromSettings(settings));\n  }\n\n  let highlighters = await highlighterCache.get(settings)!;\n  return { settings, highlighters };\n};\n\nexport const transformAttributesToHTML = (\n  code: string,\n  fenceString: string,\n  highlighters: Highlighter[],\n  settings: UserConfigSettings\n) => {\n  const fence = parseFence(fenceString);\n\n  const twoslash = runTwoSlashOnNode(code, fence, settings);\n  const newCode = (twoslash && twoslash.code) || code;\n  return getHTML(newCode, fence, highlighters, twoslash, settings);\n};\n"],"names":["cachedTwoslashCall","code","lang","settings","isWebWorker","self","WorkerGlobalScope","isBrowser","window","document","fetch","runTwoSlash","_require","require","createHash","_require2","readFileSync","existsSync","mkdirSync","writeFileSync","_require3","join","shikiVersion","version","tsVersion","shasum","codeSha","update","digest","getNmCache","__dirname","includes","split","getPnpCache","pnp","getPackageInformation","topLevel","packageLocation","error","cacheRoot","process","versions","cachePath","env","debug","console","log","JSON","parse","results","recursive","stringify","addIncludes","map","name","lines","forEach","l","_i","trimmed","trim","startsWith","key","set","push","replaceIncludesInCode","_map","toReplace","match","exec","index","lastIndex","replaceWith","get","msg","Array","from","keys","Error","length","newCode","toString","reverse","r","substring","escapeHtml","html","replace","setupNodeForTwoslashException","node","css","bodyFromTwoslashError","title","description","recommendation","bodyFromError","message","isJest","jest","eLog","_str","body","String","TwoslashError","codeSample","type","value","children","Map","getHTML","fence","highlighters","twoslash","twoslashSettings","replacer","json5","meta","include","wrapFragments","output","highlighter","themeName","customName","pop","renderCodeToHTML","_extends","runTwoSlashOnNode","_ref","shouldDisableTwoslash","TWOSLASH_DISABLE","undefined","importedCode","highlighterCache","highlightersFromSettings","themes","theme","Promise","all","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_callee$","_context","prev","next","getHighlighter","sent","abrupt","stop","_x","apply","arguments","parsingNewFile","clear","parseFence","_lex","lex","tokens","slice","indexOf","splice","_parse","remarkTwoslash","has","transform","_ref3","_callee2","markdownAST","_callee2$","_context2","visit","remarkVisitor","_x2","filter","Boolean","twoslashError","Object","ignoreCodeblocksWithCodefenceMeta","shouldAlwaysRaise","CI","yeahButNotInTests","alwayRaiseForTwoslashExceptions","extension","shikiHTML","setupForFile","_ref4","_callee3","_context3","_x3","transformAttributesToHTML","fenceString"],"mappings":"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"}